#집합 자료형은 set 키워드를 이용해 만들 수 있다.

#예시 1
>>> s1 = set([1,2,3])
>>> s1
{1, 2, 3}

#예시 2
>>> s2 = set("Hello")
>>> s2
{'o', 'e', 'H', 'l'}
'''
집합의 특징
1. 중복을 허용하지 않는다.
2. 순서가 없다.(Unordered)
set 자료형은 순서가 없기(unordered) 때문에 인덱싱으로 값을 얻을 수 없다.
딕셔너리 역시 순서가 없는 자료형이라 인덱싱을 지원하지 않는다.
(※ set는 자료형의 중복을 제거하기 위한 필터 역할로 종종 사용되기도 한다.)
'''
#set 자료형에 저장된 값을 인덱싱으로 접근하려면 리스트나 튜플로 변환한 후 해야 한다.
>>> l1 = list(s1)
>>> l1
[1, 2, 3]
>>> l1[0]
1

'''
교집합, 합집합, 차집합 구하기
set 자료형이 정말 유용하게 사용되는 경우는 교집합, 합집합, 차집합을 구할 때이다.
'''

#교집합
>>> s1 & s2
{4, 5, 6}
>>> s1.intersection(s2)
{4, 5, 6}

#합집합
>>> s1 | s2
{1, 2, 3, 4, 5, 6, 7, 8, 9}
>>> s1.union(s2)
{1, 2, 3, 4, 5, 6, 7, 8, 9}

#차집합
>>> s1 - s2
{1, 2, 3}
>>> s2 - s1
{8, 9, 7}
>>> s1.difference(s2)
{1, 2, 3}
>>> s2.difference(s1)
{8, 9, 7}

#set 자료형에 1개의 값 추가하기
